
##
###############################################################################
###############                   Tool 'wit'                    ###############
###############################################################################

#:def_tool( "wit", \
	"wit [option]... command [option|parameter|@file]...", \
	"Wiimms ISO Tool : It can list, analyze, verify, convert, split, join," \
	" patch, mix, extract, compose, rename and compare Wii and GameCube" \
	" discs. It can create and dump different other file formats." )

#:def_cmd( "VERSION", "VERSION", \
	"wit VERSION [ignored]...", \
	"Print program name and version and exit." )

#:def_cmd( "HELP", "HELP|H|?", \
	"wit HELP [command] [ignored]...", \
	"Print help and exit. If the first non option is a valid command name," \
	" then a help for the given command is printed." )

#:def_cmd( "TEST", "TEST", \
	"wit TEST [ignored]...", \
	"Test options: All options are allowed, some are printed." )

#:def_cmd( "ERROR", "ERROR|ERR", \
	"wit ERROR [error_code]", \
	"Translate exit code to message or print a table with all error" \
	" messages if not exit code is given." )

#:def_cmd( "COMPR", "COMPR", \
	"wit COMPR [mode]...", \
	"Scan compression modes and print the normalized names. See option" \
	" {--compression} for syntax details. If no mode is given than print a" \
	" table with all available compression methods." )

#:def_cmd( "EXCLUDE", "EXCLUDE", \
	"wit EXCLUDE [additional_excludes]...", \
	"Dump the internal exclude database to standard output (stdout)." )

#:def_cmd( "TITLES", "TITLES", \
	"wit TITLES [additional_title_file]", \
	"Dump the internal title database to standard output (stdout)." )

#:def_cmd( "CREATE", "CREATE", \
	"wit CREATE TICKET outfile [--id id] [title_id] [decrypted_key]\n" \
	"wit CREATE TMD outfile [--id id] [--ios ios] [hash_val]", \
	"Create a system file." )

#:def_cmd( "FILELIST", "FILELIST|FLIST", \
	"wit FILELIST [source]...", \
	"List all source files in a table." )

#:def_cmd( "FILETYPE", "FILETYPE|FTYPE", \
	"wit FILETYPE [source]...", \
	"Print a status line for each source file." )

#:def_cmd( "ISOSIZE", "ISOSIZE|SIZE", \
	"wit ISOSIZE [source]...", \
	"Print a status line with size infos for each source file." )

#:def_cmd( "DUMP", "DUMP|D", \
	"wit DUMP [source]...", \
	"Dump the data structure of Wii and GameCube ISO files, ticket.bin," \
	" tmd.bin, header.bin, boot.bin, fst.bin and of DOL-files. The file" \
	" type is detected automatically by analyzing the content." )

#:def_cmd( "ID6", "ID6|ID", \
	"wit ID6 [id]...", \
	"Print ID6 of all found ISO files. If the ID list is set use it as" \
	" selector." )

#:def_cmd( "LIST", "LIST|LS", \
	"wit LIST [source]...", \
	"List all found ISO files." )

#:def_cmd( "LIST_L", "LIST-L|LL|LISTL", \
	"wit LIST-L [source]...", \
	"List all found ISO files. 'LIST-L' is a shortcut for {LIST --long}." )

#:def_cmd( "LIST_LL", "LIST-LL|LLL|LISTLL", \
	"wit LIST-LL [source]...", \
	"List all found ISO files. 'LIST-LL' is a shortcut for {LIST --long" \
	" --long}." )

#:def_cmd( "LIST_LLL", "LIST-LLL|LLLL|LISTLLL", \
	"wit LIST-LLL [source]...", \
	"List all found ISO files. 'LIST-LLL' is a shortcut for {LIST --long" \
	" --long --long}." )

#:def_cmd( "FILES", "FILES|F|ILIST|IL", \
	"wit FILES [source]...", \
	"List all files of all discs." )

#:def_cmd( "FILES_L", "FILES-L|FL|FILESL|ILIST-L|ILL|ILISTL", \
	"wit FILES-L [source]...", \
	"List all files of all discs. 'FILES-L' is a shortcut for {FILES" \
	" --long}." )

#:def_cmd( "FILES_LL", "FILES-LL|FLL|FILESLL|ILIST-LL|ILLL|ILISTLL", \
	"wit FILES-LL [source]...", \
	"List all files of all discs. 'FILES-LL' is a shortcut for {FILES" \
	" --long --long}." )

#:def_cmd( "DIFF", "DIFF|CMP", \
	"wit DIFF source dest\n" \
	"wit DIFF [-s path]... [-r path]... [source]... [-d|-D] dest", \
	"DIFF compares ISO images in scrubbed or raw mode or on file level." \
	" DIFF works like {COPY} but comparing source and destination." )

#:def_cmd( "FDIFF", "FDIFF|FCMP", \
	"wit FDIFF source dest\n" \
	"wit FDIFF [-s path]... [-r path]... [source]... [-d|-D] dest", \
	"FDIFF compares ISO images on file level. 'FDIFF' is a shortcut for" \
	" {DIFF --files +}." )

#:def_cmd( "EXTRACT", "EXTRACT|X", \
	"wit EXTRACT source dest\n" \
	"wit EXTRACT [-s path]... [-r path]... [source]... [-d|-D] dest", \
	"Extract all files from the source discs." )

#:def_cmd( "COPY", "COPY|CP", \
	"wit COPY source dest\n" \
	"wit COPY [-s path]... [-r path]... [source]... [-d|-D] dest", \
	"Copy, scrub, convert, join, split, compose, extract, patch, encrypt" \
	" and decrypt Wii and GameCube disc images." )

#:def_cmd( "CONVERT", "CONVERT|CV|SCRUB|SB", \
	"wit CONVERT source\n" \
	"wit CONVERT [-s path]... [-r path]... [source]...", \
	"Convert, scrub, join, split, compose, extract, patch, encrypt and" \
	" decrypt Wii and GameCube disc images and replace the source with the" \
	" result. The former command name was @SCRUB@." )

#:def_cmd( "EDIT", "EDIT|ED", \
	"wit EDIT source\n" \
	"wit EDIT [-s path]... [-r path]... [source]...", \
	"Edit an existing Wii and GameCube ISO image and patch some values." )

#:def_cmd( "MOVE", "MOVE|MV", \
	"wit MOVE source dest\n" \
	"wit MOVE [-s path]... [-r path]... [source]... [-d|-D] dest", \
	"Move and rename Wii and GameCube ISO images." )

#:def_cmd( "RENAME", "RENAME|REN", \
	"wit RENAME id6=[new][,title]...", \
	"Rename the ID6 of discs. Disc title can also be set." )

#:def_cmd( "SETTITLE", "SETTITLE|ST", \
	"wit SETTITLE id6=title...", \
	"Set the disc title of discs." )

#:def_cmd( "VERIFY", "VERIFY|V", \
	"wit VERIFY [source]...", \
	"Verify ISO images (calculate and compare SHA1 check sums) to find bad" \
	" dumps." )

#:def_cmd( "MIX", "MIX", \
	"wit MIX SOURCE... --dest|--DEST outfile\n" \
	"  where SOURCE    = infile [QUALIFIER]...\n" \
	"  where QUALIFIER = 'select' part_type\n" \
	"                  | 'as' [part_table '.'] [part_type]]\n" \
	"                  | 'ignore' ruleset\n" \
	"                  | 'header'\n" \
	"                  | 'region'", \
	"Mix the partitions from different sources into one new Wii or" \
	" GameCube disc." )

#:def_opt( "VERSION", "V|version", "G", \
	"", \
	"Stop parsing the command line, print a version info and exit." )

#:def_opt( "HELP", "h|help", "G", \
	"", \
	"Stop parsing the command line, print a help message and exit." )

#:def_opt( "XHELP", "xhelp", "G", \
	"", \
	"Stop parsing the command line and print a help message with all" \
	" commands included. Exit after printing." )

#:def_opt( "WIDTH", "width", "GP", \
	"width", \
	"Define the width (number of columns) for help and some other" \
	" messages. This option disables the automatic detection of the" \
	" terminal width." )

#:def_opt( "QUIET", "q|quiet", "GM", \
	"", \
	"Be quiet and print only error messages." )

#:def_opt( "VERBOSE", "v|verbose", "GM", \
	"", \
	"Be verbose and print more progress information. Multiple usage is" \
	" possible: Progress counter is enabled if set at least two times." \
	" Extended logging is enabled if set at least four times. The impact" \
	" of the other verbose levels are command dependent." )

#:def_opt( "PROGRESS", "P|progress", "G", \
	"", \
	"Print progress counter independent of verbose level." )

#:def_opt( "LOGGING", "L|logging", "GM", \
	"", \
	"Enable the logging of internal memory maps. If set twice second level" \
	" memory maps are printed too." )

#:def_opt( "ESC", "E|esc", "GP", \
	"char", \
	"Define an alternative escape character for destination files. The" \
	" default is '%'. For Windows (CYGWIN) it is a good choice to set" \
	" @'-E$$'@." )

#:def_opt( "IO", "io", "GP", \
	"flags", \
	"Setup the IO mode for experiments. The standard file IO is based on" \
	" open() function. The value '1' defines that WBFS IO is based on" \
	" fopen() function. The value '2' defines the same for ISO files and" \
	" value '4' for WIA files. You can combine the values by adding them." )

#:def_opt( "TITLES", "T|titles", "GMP", \
	"file", \
	"Read file for disc titles. -T0 disables titles lookup." )

#:def_opt( "UTF_8", "utf-8|utf8", "G", \
	"", \
	"Enables UTF-8 support (default)." )

#:def_opt( "NO_UTF_8", "no-utf-8|no-utf8|noutf8", "G", \
	"", \
	"Disables UTF-8 support (CYGWIN default)." )

#:def_opt( "LANG", "lang", "GP", \
	"lang", \
	"Define the language for titles." )

#:def_opt( "TEST", "t|test", "GM", \
	"", \
	"Run in test mode, modify nothing.\n" \
	">>> USE THIS OPTION IF UNSURE! <<<" )

#:def_opt( "SOURCE", "s|source", "CMP", \
	"path", \
	"ISO file or directory with ISO files." )

#:def_opt( "RECURSE", "r|recurse", "CMP", \
	"path", \
	"ISO file or base of a directory tree with ISO files." )

#:def_opt( "RDEPTH", "rdepth", "CP", \
	"depth", \
	"Set the maximum recurse depth for option {--recurse} (default=10)." )

#:def_opt( "INCLUDE", "n|include", "CMP", \
	"id", \
	"Include only discs with given ID4 or ID6 from operation. If the" \
	" parameter begins with a '@@' the given file is read and each line is" \
	" scanned for IDs." )

#:def_opt( "INCLUDE_PATH", "N|include-path|includepath", "CMP", \
	"file_or_dir", \
	"ISO file or base of directory tree -> scan their ID6." )

#:def_opt( "EXCLUDE", "x|exclude", "CMP", \
	"id", \
	"Exclude discs with given ID4 or ID6 from operation. If the parameter" \
	" begins with a '@@' the given file is read and each line is scanned" \
	" for IDs." )

#:def_opt( "EXCLUDE_PATH", "X|exclude-path|excludepath", "CMP", \
	"file_or_dir", \
	"ISO file or base of directory tree -> scan their ID6." )

#:def_opt( "IGNORE", "i|ignore", "CM", \
	"", \
	"Ignore non existing files/discs without warning. If set twice then" \
	" all non Wii and GameCube ISO images are ignored too." )

#:def_opt( "IGNORE_FST", "ignore-fst|ignorefst", "C", \
	"", \
	"Disable composing and ignore FST directories as input." )

#:def_opt( "PSEL", "psel", "CP", \
	"list", \
	"This option set the scrubbing mode and defines, which disc partitions" \
	" are handled. It expects a comma separated list of keywords, numbers" \
	" and names; all together called parameter. All parameters are case" \
	" insensitive and non ambiguous abbreviations of keyword are allowed.\n" \
	"  Each parameter becomes a rule and each rule is appended to a rule" \
	" list. Rules prefixed by a minus sign are DENY rules. Rules prefixed" \
	" by a plus sign or without a prefix are ALLOW rules. Each partition" \
	" is compared with each rule until a rule matches the partition. If a" \
	" match it found, the partition is enabled for a ALLOW rule or" \
	" disabled for a DENY rule.\n" \
	"  The allowed keywords are: @DATA@, @UPDATE@, @CHANNEL@, @PTAB0@ .." \
	" @PTAB3@, @ID@, @ALL@, @WHOLE@ and @RAW@. The following input formats" \
	" are accepted too: @ptype@, @#index@, @#<index@, @#<=index@," \
	" @#>index@, @#>=index@ and @#tab_index.part_index@." )

#:def_opt( "RAW", "raw", "C", \
	"", \
	"Abbreviation of {--psel RAW}." )

#:def_opt( "PMODE", "pmode", "CP", \
	"p-mode", \
	"This options set the prefix mode for listed or extracted files. One" \
	" of the following values is allowed: @AUTO, NONE, POINT, NAME," \
	" INDEX@. The default value is @'auto'@." )

#:def_opt( "SNEEK", "sneek", "C", \
	"", \
	"Abbreviation of {--psel data --pmode none --files =sneek}." )

#:def_opt( "ENC", "enc", "CP", \
	"encoding", \
	"Define the encoding mode. The mode is one of NONE, HASHONLY, DECRYPT," \
	" ENCRYPT, SIGN or AUTO. The case of the keywords is ignored. The" \
	" default mode is 'AUTO'." )

#:def_opt( "ID", "id", "CP", \
	"id", \
	"This $patching$ option changes the ID of the disc to the given" \
	" parameter. 1 to 6 characters are expected. Only defined characters" \
	" not equal '.' are modified. The disc header, boot.bin, ticket.bin" \
	" and tmd.bin are  objects to modify. The option {--modify} selects" \
	" the objects." )

#:def_opt( "NAME", "name", "CP", \
	"name", \
	"This $patching$ option changes the name (disc title) of the disc to" \
	" the given parameter. Up to 63 characters are expected. The disc" \
	" header and boot.bin are objects to modify. The option {--modify}" \
	" selects the objects." )

#:def_opt( "MODIFY", "modify", "CP", \
	"list", \
	" This $patching$ option expects a comma separated list of the" \
	" following keywords (case ignored) as parameter: @NONE, DISC, BOOT," \
	" TICKET, TMD, WBFS, ALL@ and @AUTO@ (default).\n" \
	"  All keywords can be prefixed by @'+'@ to enable that option, by a" \
	" @'-'@ to disable it or by a @'='@ to enable that option and disable" \
	" all others." )

#:def_opt( "REGION", "region", "CP", \
	"region", \
	"This $patching$ option defines the region of the disc.  The region is" \
	" one of @JAPAN, USA, EUROPE, KOREA, FILE@ or @AUTO@ (default). The" \
	" case of the keywords is ignored. Unsigned numbers are also accepted." )

#:def_opt( "COMMON_KEY", "common-key", "CP", \
	"index", \
	"This $patching$ option defines the common key index as part of the" \
	" TICKET. Keywords @0@, @STANDARD@, @1@ and @KOREAN@ are accepted." )

#:def_opt( "IOS", "ios", "CP", \
	"ios", \
	"This $patching$ option defines the system version (IOS to load)" \
	" within TMD. The format is @'HIGH:LOW'@ or @'HIGH-LOW'@ or @'LOW'@." \
	" If only @LOW@ is set than @HIGH@ is assumed as 1 (standard IOS)." )

#:def_opt( "RM_FILES", "rm-files|rm-file|rmfiles|rmfile", "CP", \
	"ruleset", \
	"This patching option defines filter rules to remove real files and" \
	" directories from the FST of the DATA partition. $Fake signing$ of" \
	" the TMD is necessary. The processing order of file options is:" \
	" {--rm-files --zero-files --ignore-files}." )

#:def_opt( "ZERO_FILES", "zero-files|zero-file|zerofiles|zerofile", "CP", \
	"ruleset", \
	"This patching option defines filter rules to zero (set size to zero)" \
	" real files of the FST of the DATA partition. $Fake signing$ of the" \
	" TMD is necessary. The processing order of file options is:" \
	" {--rm-files --zero-files --ignore-files}." )

#:def_opt( "OVERLAY", "overlay", "C", \
	"", \
	"Most partitions have holes (unused areas) in the data section. If" \
	" combining multiple partitions into one disc it is possible to" \
	" overlay the partitions so that the data of one partition resides in" \
	" the hole of other partitions. This option enables this feature. It" \
	" also limits the number of input partitions to 12, because the" \
	" calculation is rated as O(2^n)." )

#:def_opt( "IGNORE_FILES", "ignore-files|ignore-file|ignorefiles|ignorefile", "CP", \
	"ruleset", \
	"This option defines filter rules to ignore real files of the FST of" \
	" the DATA partition. $Fake signing$ is not necessary, but the" \
	" partition becomes invalid, because the content of some files is not" \
	" copied. If such file is accessed the Wii will halt immediately," \
	" because the verification of the check sum calculation fails. The" \
	" processing order of file options is: {--rm-files --zero-files" \
	" --ignore-files}." )

#:def_opt( "ALIGN_PART", "align-part|alignpart", "CP", \
	"size", \
	"If creating or moving partitions the beginning of each partition is" \
	" set to an offset that is a multiple of the align size. Size must be" \
	" a power of 2 and at least 32 KiB (=default)." )

#:def_opt( "DEST", "d|dest", "CP", \
	"path", \
	"Define a destination path (directory/file). The destination path is" \
	" scanned for escape sequences (see option {--esc}) to allow generic" \
	" pathes." )

#:def_opt( "DEST2", "D|DEST", "CP", \
	"path", \
	"Like {--dest}, but create the directory path automatically." )

#:def_opt( "SPLIT", "z|split", "C", \
	"", \
	"Enable output file splitting, default split size = 4 GB." )

#:def_opt( "SPLIT_SIZE", "Z|split-size|splitsize", "CP", \
	"sz", \
	"Enable output file splitting and define split size. The parameter" \
	" 'sz' is a floating point number followed by an optional unit factor" \
	" (one of 'cb' [=1] or  'kmgtpe' [base=1000] or 'KMGTPE' [base=1024])." \
	" The default unit is 'G' (GiB)." )

#:def_opt( "DISC_SIZE", "disc-size|discsize", "CP", \
	"size", \
	"Define a minimal (virtual) ISO disc size." )

#:def_opt( "TRUNC", "trunc", "C", \
	"", \
	"Truncate PLAIN ISO images to the needed size while creating." )

#:def_opt( "CHUNK_MODE", "chunk-mode|chunkmode|chm", "CP", \
	"mode", \
	"Defines an operation mode for {--chunk-size} and {--max-chunks}." \
	" Allowed keywords are @'ANY'@ to allow any values, @'32K'@ to force" \
	" chunk sizes with a multiple of 32 KiB, @'POW2'@ to force chunk sizes" \
	" >=32K and with a power of 2 or @'ISO'@ for ISO images (more" \
	" restrictive as @'POW2'@, best for USB loaders). The case of the" \
	" keyword is ignored. The default key is @'ISO'@.\n" \
	"@--chm@ is a shortcut for @--chunk-mode@." )

#:def_opt( "CHUNK_SIZE", "chunk-size|chunksize|chs", "CP", \
	"sz", \
	"Define the minimal chunk size if creating a CISO or WIA file (for WIA" \
	" details see option --compression}). The default is to calculate the" \
	" chunk size from the input file size and find a good value by using a" \
	" minimal value of 1 MiB for {--chunk-mode ISO} and @32 KiB@ for modes" \
	" @32K@ and @POW2@. For the modes @ISO@ and @POW2@ the value is" \
	" rounded up to the next power of 2. This calculation also depends" \
	" from option {--max-chunks}.\n" \
	"  The parameter 'sz' is a floating point number followed by an" \
	" optional unit factor (one of 'cb' [=1] or  'kmgtpe' [base=1000] or" \
	" 'KMGTPE' [base=1024]). The default unit is 'M' (MiB). If the number" \
	" is prefixed with a @'='@ then options {--chunk-mode} and" \
	" {--max-chunks} are ignored and the given value is used without any" \
	" rounding or changing.\n" \
	"  If the input file size is not known (e.g. reading from pipe), its" \
	" size is assumed as @12 GiB@.\n" \
	"  @--chs@ is a shortcut for @--chunk-size@." )

#:def_opt( "MAX_CHUNKS", "max-chunks|maxchunks|mch", "CP", \
	"n", \
	"Define the maximal number of chunks if creating a CISO file. The" \
	" default value is 8192 for {--chunk-mode ISO} and 32760 (maximal" \
	" value) for all other modes. If this value is set than the automatic" \
	" calculation  of {--chunk-size} will be modified too.\n" \
	"  @--mch@ is a shortcut for @--max-chunks@." )

#:def_opt( "COMPRESSION", "compression|compr", "CP", \
	"mode", \
	"Select one compression method, level and chunk size for new WIA" \
	" files. The syntax for mode is: @[method] [.level] [@@factor]@\n" \
	"  @'method'@ is the name or index of the method. Possible" \
	" compressions method are @NONE@, @PURGE@, @BZIP2@, @LZMA@ and" \
	" @LZMA2@. There are additional keywords: @DEFAULT@ (=@LZMA.5@@20@)," \
	" @FAST@ (=@BZIP2.3@@10@), @GOOD@ (=@LZMA.5@@20@) @BEST@" \
	" (=@LZMA.7@@50@), and @MEM@ (use best mode in respect to memory limit" \
	" set by {--mem}). These additional keywords may change their meanings" \
	" if a new compression method is implemented.\n" \
	"  @'.level'@ is a point followed by one digit. It defines the" \
	" compression level. The special value @.0@ means: Use default" \
	" compression level (=@.5@).\n" \
	"  @'@@factor'@ is a factor for the chunk size. The base size is 2" \
	" MiB. The value@ @@0@ is replaced by the default factor@ @@20@ (40" \
	" MiB). If the factor is not set but option {--chunk-size} is set, the" \
	" factor will be calculated by using a rounded value of that option.\n" \
	"  All three parts are optional. All default values may be changed in" \
	" the future. @--compr@ is a shortcut for @--compression@." )

#:def_opt( "MEM", "mem", "CP", \
	"size", \
	"This option defines a memory usage limit for compressing files. When" \
	" compressing a file with method @MEM@ (see {--compression}) the the" \
	" compression method, level and chunk size are calculated with respect" \
	" to this limit.\n" \
	"  If this option is not set or the value is 0, then the environment" \
	" @WIT_MEM@ is tried to read instead. If this fails, the tool tries to" \
	" find out the total memory by reading @/proc/meminfo@. The limit is" \
	" set to 80% of the total memory minus 50 MiB." )

#:def_opt( "PRESERVE", "p|preserve", "C", \
	"", \
	"Preserve file times (atime+mtime)." )

#:def_opt( "UPDATE", "u|update", "C", \
	"", \
	"Copy only non existing files, ignore other without warning." )

#:def_opt( "OVERWRITE", "o|overwrite", "C", \
	"", \
	"Overwrite already existing files." )

#:def_opt( "REMOVE", "R|remove", "C", \
	"", \
	"Remove source files/discs if operation is successful." )

#:def_opt( "WDF", "W|wdf", "C", \
	"", \
	"Set ISO output file type to WDF (Wii Disc Format, default)" )

#:def_opt( "ISO", "I|iso", "C", \
	"", \
	"Set ISO output file type to PLAIN ISO." )

#:def_opt( "CISO", "C|ciso", "C", \
	"", \
	"Set ISO output file type to CISO (Compact ISO, same as WBI)." )

#:def_opt( "WBFS", "B|wbfs", "C", \
	"", \
	"Set ISO output file type to WBFS (Wii Backup File System) container." )

#:def_opt( "WIA", "wia", "C", \
	"", \
	"Set ISO output file type to WIA (Wii ISO Archive). WIA files are not" \
	" editable by {wit EDIT}." )

#:def_opt( "FST", "fst", "C", \
	"", \
	"Set ISO output mode to 'file system' (extracted ISO)." )

#:def_opt( "FILES", "F|files", "CMP", \
	"rules", \
	"Append a file select rules. This option can be used multiple times to" \
	" extend the rule list. Rules beginning with a '+' or a '-' are allow" \
	" or deny rules rules. Rules beginning with a '=' are macros for" \
	" internal rule sets." )

#:def_opt( "ITIME", "itime", "C", \
	"", \
	"Select 'itime' (insertion time) for printing. @--itime@ is an" \
	" abbreviation of {--time i}." )

#:def_opt( "MTIME", "mtime", "C", \
	"", \
	"Select 'mtime' (last modification time) for printing. @--mtime@ is an" \
	" abbreviation of {--time m}." )

#:def_opt( "CTIME", "ctime", "C", \
	"", \
	"Select 'ctime' (last status change time) for printing. @--ctime@ is" \
	" an abbreviation of {--time c}." )

#:def_opt( "ATIME", "atime", "C", \
	"", \
	"Select 'atime' (last access time) for printing. @--atime@ is an" \
	" abbreviation of {--time a}." )

#:def_opt( "TIME", "time", "CMP", \
	"list", \
	"Set time printing and sorting mode The parameter is a comma separated" \
	" list of the following keywords, case is ignored: RESET, OFF, ON," \
	" SINGLE, MULTI, NONE, ALL, I, M, C, A, DATE, TIME, SEC, IDATE, MDATE," \
	" CDATE, ADATE, ITIME, MTIME, CTIME, ATIME, ISEC, MSEC, CSEC, ASEC." )

#:def_opt( "LONG", "l|long", "CM", \
	"", \
	"Print in long format. Multiple usage possible." )

#:def_opt( "NUMERIC", "numeric", "C", \
	"", \
	"Force numeric output instead of printing names." )

#:def_opt( "SHOW", "show", "CP", \
	"list", \
	"This option allows fine control over the things that are to be" \
	" printed. The parameter is a comma separated list of the following" \
	" keywords, case is ignored:  @NONE, INTRO, P-TAB, P-INFO, P-MAP," \
	" D-MAP, TICKET, TMD, USAGE, PATCH, RELOCATE, FILES, OFFSET, SIZE," \
	" PATH@ and @ALL@. There are some combined keys: @PART :=" \
	" P-INFO,P-MAP,TICKET,TMD@, @MAP := P-MAP,D-MAP@.\n" \
	"  All keywords can be prefixed by '+' to enable that option, by a '-'" \
	" to disable it or by a '=' to enable that option and disable all" \
	" others.\n" \
	"  The additional keywords @DEC@ and @HEX@ can be used to set a" \
	" prefered number format. @-HEADER@ suppresses the output of header" \
	" lines.\n" \
	"  The commands recognize only some of these keywords and ignore the" \
	" others. If @--show@ is set, option {--long} is ignored for selecting" \
	" output elements." )

#:def_opt( "UNIQUE", "U|unique", "C", \
	"", \
	"Eliminate multiple entries with same ID6." )

#:def_opt( "NO_HEADER", "H|no-header|noheader", "C", \
	"", \
	"Suppress printing of header and footer." )

#:def_opt( "SECTIONS", "sections", "C", \
	"", \
	"Print in machine readable sections and parameter lines." )

#:def_opt( "SORT", "S|sort", "CP", \
	"list", \
	"Define the sort mode for listings. The parameter is a comma separated" \
	" list of the following keywords: @NONE, NAME, TITLE, FILE, SIZE," \
	" OFFSET, REGION, WBFS, NPART, ITIME, MTIME, CTIME, ATIME, TIME =" \
	" DATE, DEFAULT, ASCENDING, DESCENDING = REVERSE@." )

#:def_opt( "LIMIT", "limit", "CP", \
	"num", \
	"Limit the output to NUM messages." )

#:def_cmd_opt( "VERSION", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "VERSION", "LONG", \
	"", \
	"Print in long format. Ignored if option {--sections} is set." )

#:def_cmd_opt( "ERROR", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "ERROR", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "ERROR", "LONG", \
	"", \
	"Print extended message instead of error name." )

#:def_cmd_opt( "COMPR", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "COMPR", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "COMPR", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "COMPR", "LONG", \
	"", \
	"Print the numeric value and the normalized name. If set twice print a" \
	" table with the numeric value, normalized name and alternative names." )

#:def_cmd_opt( "COMPR", "VERBOSE", \
	"", \
	"Show default compression level and chunk size factor too. Standard is" \
	" to suppress these values if not explicitly set." )

#:def_cmd_opt( "COMPR", "NUMERIC", \
	"", \
	"" )

#:def_cmd_opt( "EXCLUDE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EXCLUDE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "CREATE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "CREATE", "DEST", \
	"", \
	"Define a destination path (directory/file). This path is concatenated" \
	" with the @outfile@." )

#:def_cmd_opt( "CREATE", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "CREATE", "ID", \
	"", \
	"Define an ID for the TICKET or TMD." )

#:def_cmd_opt( "CREATE", "IOS", \
	"", \
	"Define an IOS/SYS-VERSION for the TMD." )

#:def_cmd_opt( "FILELIST", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FILELIST", "LONG", \
	"", \
	"Print the real path instead of given path." )

#:def_cmd_opt( "FILETYPE", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "LONG", \
	"", \
	"If set at least once or twide additional columns with ID6 (1x) or" \
	" ther region (2x) are enabled. If set three or more times the real" \
	" path instead of given path is printed." )

#:def_cmd_opt( "ISOSIZE", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "ISOSIZE", "LONG", \
	"", \
	"If set the size is printed in MiB too. If set twice two columns with" \
	" WBFS calculations are added. If set three times the real path of the" \
	" source is printed." )

#:def_cmd_opt( "DUMP", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "LONG", \
	"", \
	"If set at least once a memory map for each partition is printed. If" \
	" set twice or more a memory map for whole ISO image is printed." )

#:def_cmd_opt( "DUMP", "SHOW", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "ID", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "DISC_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "DREGION", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "LONG", \
	"", \
	"If set, the disc name of the title db is printed too." )

#:def_cmd_opt( "LIST", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added. If set three times a second line" \
	" with number or partitions, file type and real path is added." )

#:def_cmd_opt( "LIST", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added. If set three times a second line" \
	" with number or partitions, file type and real path is added." )

#:def_cmd_opt( "LIST_L", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added. If set three times a second line" \
	" with number or partitions, file type and real path is added." )

#:def_cmd_opt( "LIST_LL", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added. If set three times a second line" \
	" with number or partitions, file type and real path is added." )

#:def_cmd_opt( "LIST_LLL", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LLL", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "LONG", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "SHOW", \
	"", \
	"" )

#:def_cmd_opt( "FILES", "SORT", \
	"", \
	"Define the sort mode for the file listing. The parameter is a comma" \
	" separated list of the following keywords: NONE, NAME, SIZE, OFFSET," \
	" ASCENDING, DESCENDING = REVERSE." )

#:def_cmd_opt( "FILES_L", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "LONG", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "SHOW", \
	"", \
	"" )

#:def_cmd_opt( "FILES_L", "SORT", \
	"", \
	"Define the sort mode for the file listing. The parameter is a comma" \
	" separated list of the following keywords: NONE, NAME, SIZE, OFFSET," \
	" ASCENDING, DESCENDING = REVERSE." )

#:def_cmd_opt( "FILES_LL", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "LONG", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "SHOW", \
	"", \
	"" )

#:def_cmd_opt( "FILES_LL", "SORT", \
	"", \
	"Define the sort mode for the file listing. The parameter is a comma" \
	" separated list of the following keywords: NONE, NAME, SIZE, OFFSET," \
	" ASCENDING, DESCENDING = REVERSE." )

#:def_cmd_opt( "DIFF", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "LONG", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "ISO", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "WBFS", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "WIA", \
	"", \
	"" )

#:def_cmd_opt( "DIFF", "FST", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "LONG", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "ISO", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "WBFS", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "WIA", \
	"", \
	"" )

#:def_cmd_opt( "FDIFF", "FST", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "SORT", \
	"", \
	"Define the extracting order. The parameter is a comma separated list" \
	" of the following keywords: NONE, NAME, SIZE, OFFSET, ASCENDING," \
	" DESCENDING = REVERSE." )

#:def_cmd_opt( "EXTRACT", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ID", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "PRESERVE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "PMODE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "FILES", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "SNEEK", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "SORT", \
	"", \
	"Define the extracting order. The parameter is a comma separated list" \
	" of the following keywords: NONE, NAME, SIZE, OFFSET, ASCENDING," \
	" DESCENDING = REVERSE." )

#:def_cmd_opt( "COPY", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "ID", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "PRESERVE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "UPDATE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "REMOVE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "DISC_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "TRUNC", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "COMPRESSION", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "ISO", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "WBFS", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "WIA", \
	"", \
	"" )

#:def_cmd_opt( "COPY", "FST", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "ID", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "DISC_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "TRUNC", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "COMPRESSION", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "PRESERVE", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "ISO", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "WBFS", \
	"", \
	"" )

#:def_cmd_opt( "CONVERT", "WIA", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "PRESERVE", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "ID", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "MOVE", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "ISO", \
	"", \
	"Modify ID and title of the ISO image. If neither @--iso@ nor {--wbfs}" \
	" is set, then both are assumed as active." )

#:def_cmd_opt( "RENAME", "WBFS", \
	"", \
	"Modify ID and title of the inode in the WBFS management area. Option" \
	" --wbfs make only sense for images within WBFS. If neither {--iso}" \
	" nor @--wbfs@ is set, then both are assumed as active." )

#:def_cmd_opt( "SETTITLE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "ISO", \
	"", \
	"Modify ID and title of the ISO image. If neither @--iso@ nor {--wbfs}" \
	" is set, then both are assumed as active." )

#:def_cmd_opt( "SETTITLE", "WBFS", \
	"", \
	"Modify ID and title of the inode in the WBFS management area. Option" \
	" --wbfs make only sense for images within WBFS. If neither {--iso}" \
	" nor @--wbfs@ is set, then both are assumed as active." )

#:def_cmd_opt( "VERIFY", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "SOURCE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "QUIET", \
	"", \
	"Be quiet and report only errors. If set twice then wit will print" \
	" nothing and only the exit status is set." )

#:def_cmd_opt( "VERIFY", "VERBOSE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "LIMIT", \
	"", \
	"Maximal printed errors of each partition. A zero means unlimitted." \
	" The default is 10." )

#:def_cmd_opt( "VERIFY", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "LONG", \
	"", \
	"On error print an additional line to localize the exact position" \
	" where the error is found. If set twice a hexdump of the hash values" \
	" is printed too." )

#:def_cmd_opt( "MIX", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "DISC_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "TRUNC", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "COMPRESSION", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "ALIGN_PART", \
	"", \
	"The beginning of each partition is set to an offset that is a" \
	" multiple of the align size. Size must be a power of 2 and at least" \
	" 32 KiB (=default). If option {--overlay} is set only the first" \
	" partition is aligned." )

#:def_cmd_opt( "MIX", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "ISO", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "WBFS", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "ID", \
	"", \
	"Define an ID for the disc header. The default is 'WIT000'." )

#:def_cmd_opt( "MIX", "NAME", \
	"", \
	"Define a disc title for the disc header. The default is a generic" \
	" title based on all sources." )

#:def_cmd_opt( "MIX", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "MIX", "OVERLAY", \
	"", \
	"" )


##
###############################################################################
###############                   Tool 'wwt'                    ###############
###############################################################################

#:def_tool( "wwt", \
	"wwt [option]... command [option|parameter|@file]...", \
	"Wiimms WBFS Tool (WBFS manager) : It can create, check, repair," \
	" verify and clone WBFS files and partitions. It can list, add," \
	" extract, remove, rename and recover ISO images as part of a WBFS." )

#:def_cmd( "VERSION", "VERSION", \
	"wwt VERSION [ignored]...", \
	"Print program name and version and exit." )

#:def_cmd( "HELP", "HELP|H|?", \
	"wwt HELP [command] [ignored]...", \
	"Print help and exit. If the first non option is a valid command name," \
	" then a help for the given command is printed." )

#:def_cmd( "TEST", "TEST", \
	"wwt TEST [ignored]...", \
	"Test options: All options are allowed, some are printed." )

#:def_cmd( "ERROR", "ERROR|ERR", \
	"wwt ERROR [error_code]", \
	"Translate exit code to message or print a table with all error" \
	" messages if not exit code is given." )

#:def_cmd( "COMPR", "COMPR", \
	"wwt ERROR [error_code]", \
	"Scan compression modes and print the normalized names. See option" \
	" {--compression} for syntax details. If no mode is given than print a" \
	" table with all available compression methods." )

#:def_cmd( "EXCLUDE", "EXCLUDE", \
	"wwt EXCLUDE [additional_excludes]...", \
	"Dump the internal exclude database to standard output (stdout)." )

#:def_cmd( "TITLES", "TITLES", \
	"wwt TITLES [additional_title_file]", \
	"Dump the internal title database to standard output (stdout)." )

#:def_cmd( "FIND", "FIND|F", \
	"wwt FIND [wbfs_partition]...", \
	"Find WBFS partitions and optionally print some geometric values." )

#:def_cmd( "SPACE", "SPACE|DF", \
	"wwt SPACE [wbfs_partition]...", \
	"Print disk space of WBFS partitions." )

#:def_cmd( "ANALYZE", "ANALYZE|ANA|ANALYSE", \
	"wwt ANALYZE [wbfs_partition]...", \
	"Analyze files and partitions for WBFS usage. Try to find old WBFS" \
	" structures and make calculations for new WBFS." )

#:def_cmd( "DUMP", "DUMP|D", \
	"wwt DUMP [wbfs_partition]...", \
	"Dump the data structure of WBFS partitions." )

#:def_cmd( "ID6", "ID6|ID", \
	"wwt ID6 [id]...", \
	"List all ID6 of all discs of WBFS partitions. If the ID list is set" \
	" use it as selector." )

#:def_cmd( "LIST", "LIST|LS", \
	"wwt LIST [wbfs_partition]...", \
	"List all discs of WBFS partitions." )

#:def_cmd( "LIST_L", "LIST-L|LL|LISTL", \
	"wwt LIST-L [wbfs_partition]...", \
	"List all discs of WBFS partitions. 'LIST-L' is a shortcut for {LIST" \
	" --long}." )

#:def_cmd( "LIST_LL", "LIST-LL|LLL|LISTLL", \
	"wwt LIST-LL [wbfs_partition]...", \
	"List all discs of WBFS partitions. 'LIST-LL' is a shortcut for {LIST" \
	" --long --long}." )

#:def_cmd( "LIST_A", "LIST-A|LA|LISTA", \
	"wwt LIST-A [wbfs_partition]...", \
	"List all discs of all WBFS partitions. 'LIST-A' is a shortcut for" \
	" {LIST --long --long --auto}." )

#:def_cmd( "LIST_M", "LIST-M|LM|LISTM", \
	"wwt LIST-M [wbfs_partition]...", \
	"List all discs of WBFS partitions in mixed view. 'LIST-M' is a" \
	" shortcut for {LIST --long --long --mixed}." )

#:def_cmd( "LIST_U", "LIST-U|LU|LISTU", \
	"wwt LIST-U [wbfs_partition]...", \
	"List all discs of WBFS partitions in mixed view. 'LIST-U' is a" \
	" shortcut for {LIST --long --long --unique}." )

#:def_cmd( "FORMAT", "FORMAT|INIT", \
	"wwt FORMAT file|blockdev...", \
	"Initialize (=format) WBFS partitions and files. Combine with" \
	" {--recover} to recover discs." )

#:def_cmd( "RECOVER", "RECOVER", \
	"wwt RECOVER [wbfs_partition]..", \
	"Recover deleted discs of WBFS partitions." )

#:def_cmd( "CHECK", "CHECK|FSCK", \
	"wwt CHECK [wbfs_partition]..", \
	"Check WBFS partitions and print error listing. To repair WBFS" \
	" partitions use the option {--repair modelist}." )

#:def_cmd( "REPAIR", "REPAIR", \
	"wwt REPAIR [wbfs_partition]..", \
	"Check WBFS partitions and repair errors. 'REPAIR' is a shortcut for" \
	" {CHECK --repair standard}." )

#:def_cmd( "EDIT", "EDIT", \
	"wwt EDIT [sub_command]...", \
	"Edit slot and block assignments. Dangerous! Read docu!" )

#:def_cmd( "PHANTOM", "PHANTOM", \
	"wwt PHANTOM [sub_command]...", \
	"Add phantom discs. Phantom discs have no content and only a header is" \
	" written. This makes adding discs very fast and this is good for" \
	" testing." )

#:def_cmd( "TRUNCATE", "TRUNCATE|TR", \
	"wwt TRUNCATE [wbfs_partition]..", \
	"Truncate WBFS partitions to the really used size." )

#:def_cmd( "ADD", "ADD|A", \
	"wwt ADD iso|wbfs|dir...", \
	"Add Wii and GameCube ISO discs to WBFS partitions." )

#:def_cmd( "UPDATE", "UPDATE|U", \
	"wwt UPDATE iso|wbfs|dir...", \
	"Add missing Wii and GameCube ISO discs to WBFS partitions. 'UPDATE'" \
	" is a shortcut for {ADD --update}." )

#:def_cmd( "SYNC", "SYNC", \
	"wwt SYNC iso|wbfs|dir...", \
	"Modify primary WBFS (REMOVE and ADD) until it contains exactly the" \
	" same discs as all sources together. 'SYNC' is a shortcut for {ADD" \
	" --sync}." )

#:def_cmd( "EXTRACT", "EXTRACT|X", \
	"wwt EXTRACT id6[=dest]...", \
	"Extract discs from WBFS partitions and store them as Wii and GameCube" \
	" ISO images." )

#:def_cmd( "REMOVE", "REMOVE|RM", \
	"wwt REMOVE id6...", \
	"Remove discs from WBFS partitions." )

#:def_cmd( "RENAME", "RENAME|REN", \
	"wwt RENAME id6=[new][,title]...", \
	"Rename the ID6 of WBFS discs. Disc title can also be set." )

#:def_cmd( "SETTITLE", "SETTITLE|ST", \
	"wwt SETTITLE id6=title...", \
	"Set the disc title of WBFS discs." )

#:def_cmd( "TOUCH", "TOUCH", \
	"wwt TOUCH id6...", \
	"Set time stamps of WBFS discs." )

#:def_cmd( "VERIFY", "VERIFY|V", \
	"wwt VERIFY id6...", \
	"Verify all discs of WBFS (calculate and compare SHA1 check sums) to" \
	" find bad dumps." )

#:def_cmd( "FILETYPE", "FILETYPE|FTYPE", \
	"wwt FILETYPE filename...", \
	"Print a status line for each source file." )

#:def_opt( "VERSION", "V|version", "G", \
	"", \
	"Stop parsing the command line, print a version info and exit." )

#:def_opt( "HELP", "h|help", "G", \
	"", \
	"Stop parsing the command line, print a help message and exit." )

#:def_opt( "XHELP", "xhelp", "G", \
	"", \
	"Stop parsing the command line and print a help message with all" \
	" commands included. Exit after printing." )

#:def_opt( "WIDTH", "width", "GP", \
	"width", \
	"Define the width (number of columns) for help and some other" \
	" messages. This option disables the automatic detection of the" \
	" terminal width." )

#:def_opt( "QUIET", "q|quiet", "GM", \
	"", \
	"Be quiet and print only error messages." )

#:def_opt( "VERBOSE", "v|verbose", "GM", \
	"", \
	"Be verbose and print more progress information. Multiple usage is" \
	" possible: Progress counter is enabled if set at least two times." \
	" Extended logging is enabled if set at least four times. The impact" \
	" of the other verbose levels are command dependent." )

#:def_opt( "PROGRESS", "P|progress", "G", \
	"", \
	"Print progress counter independent of verbose level." )

#:def_opt( "LOGGING", "L|logging", "G", \
	"", \
	"Enable the logging of internal memory maps. If set twice second level" \
	" memory maps are printed too." )

#:def_opt( "ESC", "E|esc", "GP", \
	"char", \
	"Define an alternative escape character for destination files. The" \
	" default is '%'. For Windows (CYGWIN) it is a good choice to set" \
	" @'-E$$'@." )

#:def_opt( "IO", "io", "GP", \
	"flags", \
	"Setup the IO mode for experiments. The standard file IO is based on" \
	" open() function. The value '1' defines that WBFS IO is based on" \
	" fopen() function. The value '2' defines the same for ISO files and" \
	" value '4' for WIA files. You can combine the values by adding them." )

#:def_opt( "TITLES", "T|titles", "GMP", \
	"file", \
	"Read file for disc titles. -T0 disables titles lookup." )

#:def_opt( "UTF_8", "utf-8|utf8", "G", \
	"", \
	"Enables UTF-8 support (default)." )

#:def_opt( "NO_UTF_8", "no-utf-8|no-utf8|noutf8", "G", \
	"", \
	"Disables UTF-8 support (CYGWIN default)." )

#:def_opt( "LANG", "lang", "GP", \
	"lang", \
	"Define the language for titles." )

#:def_opt( "TEST", "t|test", "GM", \
	"", \
	"Run in test mode, modify nothing.\n" \
	">>> USE THIS OPTION IF UNSURE! <<<" )

#:def_opt( "AUTO", "a|auto", "C", \
	"", \
	"Search for WBFS partitions using '/proc/partitions' or searching hard" \
	" disks in '/dev/'." )

#:def_opt( "ALL", "A|all", "C", \
	"", \
	"Use all WBFS partitions found." )

#:def_opt( "PART", "p|part", "CMP", \
	"part", \
	"Define a primary WBFS partition. Multiple usage possible." )

#:def_opt( "RECURSE", "r|recurse", "CMP", \
	"path", \
	"ISO file or base of a directory tree with ISO files." )

#:def_opt( "RDEPTH", "rdepth", "CP", \
	"depth", \
	"Set the maximum recurse depth for option {--recurse} (default=10)." )

#:def_opt( "PSEL", "psel", "CP", \
	"list", \
	"This option set the scrubbing mode and defines, which disc partitions" \
	" are handled. It expects a comma separated list of keywords, numbers" \
	" and names; all together called parameter. All parameters are case" \
	" insensitive and non ambiguous abbreviations of keyword are allowed.\n" \
	"  Each parameter becomes a rule and each rule is appended to a rule" \
	" list. Rules prefixed by a minus sign are DENY rules. Rules prefixed" \
	" by a plus sign or without a prefix are ALLOW rules. Each partition" \
	" is compared with each rule until a rule matches the partition. If a" \
	" match it found, the partition is enabled for a ALLOW rule or" \
	" disabled for a DENY rule.\n" \
	"  The allowed keywords are: @DATA@, @UPDATE@, @CHANNEL@, @PTAB0@ .." \
	" @PTAB3@, @ID@, @ALL@, @WHOLE@ and @RAW@. The following input formats" \
	" are accepted too: @ptype@, @#index@, @#<index@, @#<=index@," \
	" @#>index@, @#>=index@ and @#tab_index.part_index@." )

#:def_opt( "RAW", "raw", "C", \
	"", \
	"Abbreviation of {--psel RAW}." )

#:def_opt( "INCLUDE", "n|include", "CMP", \
	"id", \
	"Include only discs with given ID4 or ID6 from operation. If the" \
	" parameter begins with a '@@' the given file is read and each line is" \
	" scanned for IDs." )

#:def_opt( "INCLUDE_PATH", "N|include-path|includepath", "CMP", \
	"file_or_dir", \
	"ISO file or base of directory tree -> scan their ID6." )

#:def_opt( "EXCLUDE", "x|exclude", "CMP", \
	"id", \
	"Exclude discs with given ID4 or ID6 from operation. If the parameter" \
	" begins with a '@@' the given file is read and each line is scanned" \
	" for IDs." )

#:def_opt( "EXCLUDE_PATH", "X|exclude-path|excludepath", "CMP", \
	"file_or_dir", \
	"ISO file or base of directory tree -> scan their ID6." )

#:def_opt( "IGNORE", "i|ignore", "C", \
	"", \
	"Ignore non existing files/discs without warning. If set twice then" \
	" all non Wii and GameCube ISO images are ignored too." )

#:def_opt( "IGNORE_FST", "ignore-fst|ignorefst", "C", \
	"", \
	"Disable composing and ignore FST directories as input." )

#:def_opt( "ENC", "enc", "CP", \
	"encoding", \
	"Define the encoding mode. The mode is one of NONE, HASHONLY, DECRYPT," \
	" ENCRYPT, SIGN or AUTO. The case of the keywords is ignored. The" \
	" default mode is 'AUTO'." )

#:def_opt( "ID", "id", "CP", \
	"id", \
	"This $patching$ option changes the ID of the disc to the given" \
	" parameter. 1 to 6 characters are expected. Only defined characters" \
	" not equal '.' are modified. The disc header, boot.bin, ticket.bin" \
	" and tmd.bin are  objects to modify. The option {--modify} selects" \
	" the objects." )

#:def_opt( "NAME", "name", "CP", \
	"name", \
	"This $patching$ option changes the name (disc title) of the disc to" \
	" the given parameter. Up to 63 characters are expected. The disc" \
	" header and boot.bin are objects to modify. The option {--modify}" \
	" selects the objects." )

#:def_opt( "MODIFY", "modify", "CP", \
	"list", \
	" This $patching$ option expects a comma separated list of the" \
	" following keywords (case ignored) as parameter: @NONE, DISC, BOOT," \
	" TICKET, TMD, WBFS, ALL@ and @AUTO@ (default).\n" \
	"  All keywords can be prefixed by @'+'@ to enable that option, by a" \
	" @'-'@ to disable it or by a @'='@ to enable that option and disable" \
	" all others." )

#:def_opt( "REGION", "region", "CP", \
	"region", \
	"This $patching$ option defines the region of the disc.  The region is" \
	" one of @JAPAN, USA, EUROPE, KOREA, FILE@ or @AUTO@ (default). The" \
	" case of the keywords is ignored. Unsigned numbers are also accepted." )

#:def_opt( "COMMON_KEY", "common-key", "CP", \
	"index", \
	"This $patching$ option defines the common key index as part of the" \
	" TICKET. Keywords @0@, @STANDARD@, @1@ and @KOREAN@ are accepted." )

#:def_opt( "IOS", "ios", "CP", \
	"ios", \
	"This $patching$ option defines the system version (IOS to load)" \
	" within TMD. The format is @'HIGH:LOW'@ or @'HIGH-LOW'@ or @'LOW'@." \
	" If only @LOW@ is set than @HIGH@ is assumed as 1 (standard IOS)." )

#:def_opt( "RM_FILES", "rm-files|rm-file|rmfiles|rmfile", "CP", \
	"ruleset", \
	"This patching option defines filter rules to remove real files and" \
	" directories from the FST of the DATA partition. $Fake signing$ of" \
	" the TMD is necessary. The processing order of file options is:" \
	" {--rm-files --zero-files --ignore-files}." )

#:def_opt( "ZERO_FILES", "zero-files|zero-file|zerofiles|zerofile", "CP", \
	"ruleset", \
	"This patching option defines filter rules to zero (set size to zero)" \
	" real files of the FST of the DATA partition. $Fake signing$ of the" \
	" TMD is necessary. The processing order of file options is:" \
	" {--rm-files --zero-files --ignore-files}." )

#:def_opt( "IGNORE_FILES", "ignore-files|ignore-file|ignorefiles|ignorefile", "CP", \
	"ruleset", \
	"This option defines filter rules to ignore real files of the FST of" \
	" the DATA partition. $Fake signing$ is not necessary, but the" \
	" partition becomes invalid, because the content of some files is not" \
	" copied. If such file is accessed the Wii will halt immediately," \
	" because the verification of the check sum calculation fails. The" \
	" processing order of file options is: {--rm-files --zero-files" \
	" --ignore-files}." )

#:def_opt( "ALIGN_PART", "part-align", "CP", \
	"size", \
	"If creating or moving partitions the beginning of each partition is" \
	" set to an offset that is a multiple of the align size. Size must be" \
	" a power of 2 and at least 32 KiB (=default)." )

#:def_opt( "DEST", "d|dest", "CP", \
	"path", \
	"Define a destination path (directory/file). The destination path is" \
	" scanned for escape sequences (see option {--esc}) to allow generic" \
	" pathes." )

#:def_opt( "DEST2", "D|DEST", "CP", \
	"path", \
	"Like {--dest}, but create the directory path automatically." )

#:def_opt( "SPLIT", "z|split", "C", \
	"", \
	"Enable output file splitting, default split size = 4 GB." )

#:def_opt( "SPLIT_SIZE", "Z|split-size|splitsize", "CP", \
	"sz", \
	"Enable output file splitting and define split size. The parameter" \
	" 'sz' is a floating point number followed by an optional unit factor" \
	" (one of 'cb' [=1] or  'kmgtpe' [base=1000] or 'KMGTPE' [base=1024])." \
	" The default unit is 'G' (GiB)." )

#:def_opt( "DISC_SIZE", "disc-size|discsize", "CP", \
	"size", \
	"Define a minimal (virtual) ISO disc size." )

#:def_opt( "TRUNC", "trunc", "C", \
	"", \
	"Truncate PLAIN ISO images to the needed size while creating." )

#:def_opt( "FAST", "F|fast", "C", \
	"", \
	"Enables fast writing (disables searching for blocks with zeroed" \
	" data)." )

#:def_opt( "CHUNK_MODE", "chunk-mode|chunkmode|chm", "CP", \
	"mode", \
	"Defines an operation mode for {--chunk-size} and {--max-chunks}." \
	" Allowed keywords are @'ANY'@ to allow any values, @'32K'@ to force" \
	" chunk sizes with a multiple of 32 KiB, @'POW2'@ to force chunk sizes" \
	" >=32K and with a power of 2 or @'ISO'@ for ISO images (more" \
	" restrictive as @'POW2'@, best for USB loaders). The case of the" \
	" keyword is ignored. The default key is @'ISO'@.\n" \
	"@--chm@ is a shortcut for @--chunk-mode@." )

#:def_opt( "CHUNK_SIZE", "chunk-size|chunksize|chs", "CP", \
	"sz", \
	"Define the minimal chunk size if creating a CISO or WIA file (for WIA" \
	" details see option --compression}). The default is to calculate the" \
	" chunk size from the input file size and find a good value by using a" \
	" minimal value of 1 MiB for {--chunk-mode ISO} and @32 KiB@ for modes" \
	" @32K@ and @POW2@. For the modes @ISO@ and @POW2@ the value is" \
	" rounded up to the next power of 2. This calculation also depends" \
	" from option {--max-chunks}.\n" \
	"  The parameter 'sz' is a floating point number followed by an" \
	" optional unit factor (one of 'cb' [=1] or  'kmgtpe' [base=1000] or" \
	" 'KMGTPE' [base=1024]). The default unit is 'M' (MiB). If the number" \
	" is prefixed with a @'='@ then options {--chunk-mode} and" \
	" {--max-chunks} are ignored and the given value is used without any" \
	" rounding or changing.\n" \
	"  If the input file size is not known (e.g. reading from pipe), its" \
	" size is assumed as @12 GiB@.\n" \
	"  @--chs@ is a shortcut for @--chunk-size@." )

#:def_opt( "MAX_CHUNKS", "max-chunks|maxchunks|mch", "CP", \
	"n", \
	"Define the maximal number of chunks if creating a CISO file. The" \
	" default value is 8192 for {--chunk-mode ISO} and 32760 (maximal" \
	" value) for all other modes. If this value is set than the automatic" \
	" calculation  of {--chunk-size} will be modified too.\n" \
	"  @--mch@ is a shortcut for @--max-chunks@." )

#:def_opt( "COMPRESSION", "compression|compr", "CP", \
	"mode", \
	"Select one compression method, level and chunk size for new WIA" \
	" files. The syntax for mode is: @[method] [.level] [@@factor]@\n" \
	"  @'method'@ is the name or index of the method. Possible" \
	" compressions method are @NONE@, @PURGE@, @BZIP2@, @LZMA@ and" \
	" @LZMA2@. There are additional keywords: @DEFAULT@ (=@LZMA.5@@20@)," \
	" @FAST@ (=@BZIP2.3@@10@), @GOOD@ (=@LZMA.5@@20@) @BEST@" \
	" (=@LZMA.7@@50@), and @MEM@ (use best mode in respect to memory limit" \
	" set by {--mem}). These additional keywords may change their meanings" \
	" if a new compression method is implemented.\n" \
	"  @'.level'@ is a point followed by one digit. It defines the" \
	" compression level. The special value @.0@ means: Use default" \
	" compression level (=@.5@).\n" \
	"  @'@@factor'@ is a factor for the chunk size. The base size is 2" \
	" MiB. The value@ @@0@ is replaced by the default factor@ @@20@ (40" \
	" MiB). If the factor is not set but option {--chunk-size} is set, the" \
	" factor will be calculated by using a rounded value of that option.\n" \
	"  All three parts are optional. All default values may be changed in" \
	" the future. @--compr@ is a shortcut for @--compression@." )

#:def_opt( "MEM", "mem", "CP", \
	"size", \
	"This option defines a memory usage limit for compressing files. When" \
	" compressing a file with method @MEM@ (see {--compression}) the the" \
	" compression method, level and chunk size are calculated with respect" \
	" to this limit.\n" \
	"  If this option is not set or the value is 0, then the environment" \
	" @WIT_MEM@ is tried to read instead. If this fails, the tool tries to" \
	" find out the total memory by reading @/proc/meminfo@. The limit is" \
	" set to 80% of the total memory minus 50 MiB." )

#:def_opt( "SIZE", "s|size", "CP", \
	"size", \
	"Floating point size. Factors: bckKmMgGtT, default=G." )

#:def_opt( "HSS", "hss|sector-size|sectorsize", "CP", \
	"size", \
	"Define HD sector size, default=512. Factors: kKmMgGtT" )

#:def_opt( "WSS", "wss", "CP", \
	"size", \
	"Define WBFS sector size, no default. Factors: kKmMgGtT" )

#:def_opt( "RECOVER", "recover", "C", \
	"", \
	"Format a WBFS in recover mode." )

#:def_opt( "FORCE", "f|force", "C", \
	"", \
	"Force operation." )

#:def_opt( "NO_CHECK", "no-check|nocheck", "C", \
	"", \
	"Disable automatic check of WBFS before modificastions." )

#:def_opt( "REPAIR", "repair", "CP", \
	"mode", \
	"This option defines how to repair WBFS errors. The parameter is a" \
	" comma separated list of the following keywords, case is ignored:" \
	" @NONE, FBT, INODES, STANDARD, RM-INVALID, RM-OVERLAP, RM-FREE," \
	" RM-EMPTY, RM-ALL, ALL@.\n" \
	"All keywords can be prefixed by '+' to enable that option, by a '-'" \
	" to disable it or by a '=' to enable that option and disable all" \
	" others." )

#:def_opt( "NO_FREE", "no-free|nofree", "C", \
	"", \
	"The discs are only dropped (slot is marked free), but the" \
	" correspondent blocks are not freed. You should run CHECK or REPAIR" \
	" to repair the WBFS after using this option." )

#:def_opt( "UPDATE", "u|update", "C", \
	"", \
	"Copy only non existing discs." )

#:def_opt( "SYNC", "y|sync", "C", \
	"", \
	"Remove and copy discs until the destination WBFS contains exactly the" \
	" same discs as all sources together." )

#:def_opt( "NEWER", "e|newer|new", "C", \
	"", \
	"If source and dest have valid mtimes: copy if source is newer." )

#:def_opt( "OVERWRITE", "o|overwrite", "C", \
	"", \
	"Overwrite already existing files." )

#:def_opt( "REMOVE", "R|remove", "C", \
	"", \
	"Remove source files/discs if operation is successful." )

#:def_opt( "WDF", "W|wdf", "C", \
	"", \
	"Set ISO output file type to WDF (Wii Disc Format, default)" )

#:def_opt( "WIA", "wia", "C", \
	"", \
	"Set ISO output file type to WIA (Wii ISO Archive). WIA files are not" \
	" editable by {wit EDIT}." )

#:def_opt( "ISO", "I|iso", "C", \
	"", \
	"Set ISO output file type to PLAIN ISO." )

#:def_opt( "CISO", "C|ciso", "C", \
	"", \
	"Set ISO output file type to CISO (Compact ISO, same as WBI)." )

#:def_opt( "WBFS", "B|wbfs", "C", \
	"", \
	"Set ISO output file type to WBFS (Wii Backup File System) container." )

#:def_opt( "ITIME", "itime", "C", \
	"", \
	"Select 'itime' (insertion time) for printing. @--itime@ is an" \
	" abbreviation of {--time i}." )

#:def_opt( "MTIME", "mtime", "C", \
	"", \
	"Select 'mtime' (last modification time) for printing. @--mtime@ is an" \
	" abbreviation of {--time m}." )

#:def_opt( "CTIME", "ctime", "C", \
	"", \
	"Select 'ctime' (last status change time) for printing. @--ctime@ is" \
	" an abbreviation of {--time c}." )

#:def_opt( "ATIME", "atime", "C", \
	"", \
	"Select 'atime' (last access time) for printing. @--atime@ is an" \
	" abbreviation of {--time a}." )

#:def_opt( "TIME", "time", "CMP", \
	"list", \
	"Set time printing and sorting mode The parameter is a comma separated" \
	" list of the following keywords, case is ignored: RESET, OFF, ON," \
	" SINGLE, MULTI, NONE, ALL, I, M, C, A, DATE, TIME, SEC, IDATE, MDATE," \
	" CDATE, ADATE, ITIME, MTIME, CTIME, ATIME, ISEC, MSEC, CSEC, ASEC." )

#:def_opt( "SET_TIME", "set-time|settime", "CP", \
	"time", \
	"Use given time instead of current time." )

#:def_opt( "LONG", "l|long", "CM", \
	"", \
	"Print in long format. Multiple usage possible." )

#:def_opt( "NUMERIC", "numeric", "C", \
	"", \
	"Force numeric output instead of printing names." )

#:def_opt( "INODE", "inode", "C", \
	"", \
	"Print information for all inodes (invalid discs too)." )

#:def_opt( "MIXED", "M|mixed", "C", \
	"", \
	"Print disc infos of all WBFS in one combined table." )

#:def_opt( "UNIQUE", "U|unique", "C", \
	"", \
	"Eliminate multiple entries with same values." )

#:def_opt( "NO_HEADER", "H|no-header|noheader", "C", \
	"", \
	"Suppress printing of header and footer." )

#:def_opt( "SECTIONS", "sections", "C", \
	"", \
	"Print in machine readable sections and parameter lines." )

#:def_opt( "SORT", "S|sort", "CP", \
	"list", \
	"Define the sort mode for listings. The parameter is a comma separated" \
	" list of the following keywords: @NONE, NAME, TITLE, FILE, SIZE," \
	" OFFSET, REGION, WBFS, NPART, ITIME, MTIME, CTIME, ATIME, TIME =" \
	" DATE, DEFAULT, ASCENDING, DESCENDING = REVERSE@." )

#:def_opt( "LIMIT", "limit", "CP", \
	"num", \
	"Limit the output to NUM messages." )

#:def_cmd_opt( "VERSION", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "VERSION", "LONG", \
	"", \
	"" )

#:def_cmd_opt( "ERROR", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "ERROR", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "ERROR", "LONG", \
	"", \
	"Print extended message instead of error name." )

#:def_cmd_opt( "COMPR", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "COMPR", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "COMPR", "LONG", \
	"", \
	"Print the numeric value and the normalized name. If set twice print a" \
	" table with the numeric value, normalized name and alternative names." )

#:def_cmd_opt( "COMPR", "NUMERIC", \
	"", \
	"" )

#:def_cmd_opt( "EXCLUDE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EXCLUDE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "TITLES", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "FIND", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "FIND", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "FIND", "PART", \
	"", \
	"" )

#:def_cmd_opt( "FIND", "QUIET", \
	"", \
	"Be absoulte quiet and report the find status as exit code only." )

#:def_cmd_opt( "FIND", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "FIND", "LONG", \
	"", \
	"Without @--long@ only partition names of WBFS partitions are printed." \
	" If option @--long@ is set then additional infos are printed for each" \
	" partition, WBFS or not. If option @--long@ is set at least twice the" \
	" real path is printed." )

#:def_cmd_opt( "SPACE", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "SPACE", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "SPACE", "PART", \
	"", \
	"" )

#:def_cmd_opt( "SPACE", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "SPACE", "LONG", \
	"", \
	" If option @--long@ is set the real path is printed." )

#:def_cmd_opt( "ANALYZE", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "ANALYZE", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "ANALYZE", "PART", \
	"", \
	"" )

#:def_cmd_opt( "ANALYZE", "LONG", \
	"", \
	"If option @--long@ is set then calculated values are printed too if" \
	" other values are available. If option @--long@ is set twice" \
	" calculated values are always printed." )

#:def_cmd_opt( "DUMP", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "PART", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "INODE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "LONG", \
	"", \
	"If set then print a status for each valid disc within WBFS. If set" \
	" twice print a memory map for each shown disc too. If set three times" \
	" print an additional memory map for the whole WBFS. If set four times" \
	" activate {--inode} too." )

#:def_cmd_opt( "ID6", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "PART", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ID6", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "PART", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "MIXED", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added." )

#:def_cmd_opt( "LIST", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "PART", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "MIXED", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added." )

#:def_cmd_opt( "LIST_L", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_L", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "PART", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "MIXED", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added." )

#:def_cmd_opt( "LIST_LL", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_LL", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "PART", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "MIXED", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added." )

#:def_cmd_opt( "LIST_A", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_A", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "PART", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "MIXED", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added." )

#:def_cmd_opt( "LIST_M", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_M", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "PART", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "MIXED", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "UNIQUE", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "SORT", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "ITIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "MTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "CTIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "ATIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "TIME", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "LONG", \
	"", \
	"If set the size in MiB and the region is printed too. If set twice at" \
	" least on time columns is added." )

#:def_cmd_opt( "LIST_U", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "LIST_U", "SECTIONS", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "VERBOSE", \
	"", \
	"Be verbose and explain the actions." )

#:def_cmd_opt( "FORMAT", "SIZE", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "HSS", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "WSS", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "RECOVER", \
	"", \
	"" )

#:def_cmd_opt( "FORMAT", "INODE", \
	"", \
	"Force creating inode infos with predefined timestamps. The timestamps" \
	" reduce effect of sparce files. This option is set for devices" \
	" automatically." )

#:def_cmd_opt( "FORMAT", "TEST", \
	"", \
	"Force test mode and ignore {--force}." )

#:def_cmd_opt( "FORMAT", "FORCE", \
	"", \
	"This option is needed for leaving test mode and for formatting!" )

#:def_cmd_opt( "RECOVER", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "PART", \
	"", \
	"" )

#:def_cmd_opt( "RECOVER", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "PART", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "CHECK", "VERBOSE", \
	"", \
	"Be verbose. If set once then more detaiuls are printed. If set twice" \
	" a info dump of all coruppted discs is included. If set three times a" \
	" info dump of all discs is included if a error is found. If set four" \
	" times a full memory mal is included." )

#:def_cmd_opt( "CHECK", "LONG", \
	"", \
	"Option @--long@ does the same as option {--verbose}. If set at last" \
	" once it overwrites the {--verbose} level." )

#:def_cmd_opt( "CHECK", "REPAIR", \
	"", \
	"This option defines how to repair WBFS errors. The parameter is a" \
	" comma separated list of the following keywords, case is ignored:" \
	" @NONE, FBT, INODES, STANDARD, RM-INVALID, RM-OVERLAP, RM-FREE," \
	" RM-EMPTY, RM-ALL, ALL@.\n" \
	"All keywords can be prefixed by '+' to enable that option, by a '-'" \
	" to disable it or by a '=' to enable that option and disable all" \
	" others. The default is 'NONE'." )

#:def_cmd_opt( "CHECK", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "PART", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "REPAIR", "VERBOSE", \
	"", \
	"Be verbose. If set once then more detaiuls are printed. If set twice" \
	" a info dump of all coruppted discs is included. If set three times a" \
	" info dump of all discs is included if a error is found. If set four" \
	" times a full memory mal is included." )

#:def_cmd_opt( "REPAIR", "LONG", \
	"", \
	"Option @--long@ does the same as option {--verbose}. If set at last" \
	" once it overwrites the {--verbose} level." )

#:def_cmd_opt( "REPAIR", "REPAIR", \
	"", \
	"This option defines how to repair WBFS errors. The parameter is a" \
	" comma separated list of the following keywords, case is ignored:" \
	" @NONE, FBT, INODES, STANDARD, RM-INVALID, RM-OVERLAP, RM-FREE," \
	" RM-EMPTY, RM-ALL, ALL@.\n" \
	"All keywords can be prefixed by '+' to enable that option, by a '-'" \
	" to disable it or by a '=' to enable that option and disable all" \
	" others. The default is 'STANDARD' (FBT,INODES)." )

#:def_cmd_opt( "REPAIR", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "PART", \
	"", \
	"" )

#:def_cmd_opt( "EDIT", "TEST", \
	"", \
	"Force test mode and ignore {--force}." )

#:def_cmd_opt( "EDIT", "FORCE", \
	"", \
	"This option is needed for leaving test mode and for formatting!" )

#:def_cmd_opt( "PHANTOM", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "PHANTOM", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "PHANTOM", "PART", \
	"", \
	"" )

#:def_cmd_opt( "PHANTOM", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "PHANTOM", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "PHANTOM", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "PHANTOM", "VERBOSE", \
	"", \
	"Print a status line for each added disc." )

#:def_cmd_opt( "PHANTOM", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "TRUNCATE", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "TRUNCATE", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "TRUNCATE", "PART", \
	"", \
	"" )

#:def_cmd_opt( "TRUNCATE", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "TRUNCATE", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "TRUNCATE", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "TRUNCATE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "PART", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "ADD", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "ADD", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "VERBOSE", \
	"", \
	"Show a runtime summary for each job. If set twice enable progress" \
	" information. If set three times the progress information is more" \
	" detailed." )

#:def_cmd_opt( "ADD", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "ID", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "REMOVE", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "TRUNC", \
	"", \
	"Truncate WBFS until operation finished." )

#:def_cmd_opt( "ADD", "NEWER", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "SYNC", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "UPDATE", \
	"", \
	"" )

#:def_cmd_opt( "ADD", "OVERWRITE", \
	"", \
	"Overwrite already existing discs." )

#:def_cmd_opt( "UPDATE", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "PART", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "UPDATE", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "UPDATE", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "VERBOSE", \
	"", \
	"Show a runtime summary for each job. If set twice enable progress" \
	" information. If set three times the progress information is more" \
	" detailed." )

#:def_cmd_opt( "UPDATE", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "ID", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "REMOVE", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "TRUNC", \
	"", \
	"Truncate WBFS until operation finished." )

#:def_cmd_opt( "UPDATE", "NEWER", \
	"", \
	"" )

#:def_cmd_opt( "UPDATE", "SYNC", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "PART", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "SYNC", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "SYNC", "RECURSE", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "RDEPTH", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "VERBOSE", \
	"", \
	"Show a runtime summary for each job. If set twice enable progress" \
	" information. If set three times the progress information is more" \
	" detailed." )

#:def_cmd_opt( "SYNC", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "LOGGING", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "ENC", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "ID", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "NAME", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "MODIFY", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "REGION", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "COMMON_KEY", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "IOS", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "RM_FILES", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "ZERO_FILES", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "ALIGN_PART", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "REMOVE", \
	"", \
	"" )

#:def_cmd_opt( "SYNC", "TRUNC", \
	"", \
	"Truncate WBFS until operation finished." )

#:def_cmd_opt( "SYNC", "NEWER", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "PART", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "EXTRACT", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "EXTRACT", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "VERBOSE", \
	"", \
	"Show a runtime summary for each job. If set twice enable progress" \
	" information. If set three times the progress information is more" \
	" detailed." )

#:def_cmd_opt( "EXTRACT", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ESC", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "DISC_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "TRUNC", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "ISO", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "WBFS", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "UNIQUE", \
	"", \
	"Eliminate multiple ID6 from the source list." )

#:def_cmd_opt( "EXTRACT", "IGNORE", \
	"", \
	"Ignore non existing discs without any warning." )

#:def_cmd_opt( "EXTRACT", "REMOVE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "UPDATE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "EXTRACT", "FAST", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "PART", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "REMOVE", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "REMOVE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "VERBOSE", \
	"", \
	"Show a runtime summary for each job. If set twice enable progress" \
	" information. If set three times the progress information is more" \
	" detailed." )

#:def_cmd_opt( "REMOVE", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "REMOVE", "UNIQUE", \
	"", \
	"Eliminate multiple ID6 from the source list." )

#:def_cmd_opt( "REMOVE", "IGNORE", \
	"", \
	"Ignore non existing discs without any warning." )

#:def_cmd_opt( "REMOVE", "NO_FREE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "PART", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "RENAME", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "RENAME", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "RENAME", "IGNORE", \
	"", \
	"Ignore non existing discs without any warning." )

#:def_cmd_opt( "RENAME", "ISO", \
	"", \
	"Modify ID and title of the ISO image. If neither @--iso@ nor {--wbfs}" \
	" is set, then both are assumed as active." )

#:def_cmd_opt( "RENAME", "WBFS", \
	"", \
	"Modify ID and title of the inode in the WBFS management area. If" \
	" neither {--iso} nor @--wbfs@ is set, then both are assumed as" \
	" active." )

#:def_cmd_opt( "SETTITLE", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "PART", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "SETTITLE", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "SETTITLE", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "SETTITLE", "IGNORE", \
	"", \
	"Ignore non existing discs without any warning." )

#:def_cmd_opt( "SETTITLE", "ISO", \
	"", \
	"Modify ID and title of the ISO image. If neither @--iso@ nor {--wbfs}" \
	" is set, then both are assumed as active." )

#:def_cmd_opt( "SETTITLE", "WBFS", \
	"", \
	"Modify ID and title of the inode in the WBFS management area. If" \
	" neither {--iso} nor @--wbfs@ is set, then both are assumed as" \
	" active." )

#:def_cmd_opt( "TOUCH", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "PART", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "TOUCH", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "TOUCH", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "TOUCH", "UNIQUE", \
	"", \
	"Eliminate multiple ID6 from the source list." )

#:def_cmd_opt( "TOUCH", "IGNORE", \
	"", \
	"Ignore non existing discs without any warning." )

#:def_cmd_opt( "TOUCH", "ITIME", \
	"", \
	"Touch the 'itime' (insertion time)." )

#:def_cmd_opt( "TOUCH", "MTIME", \
	"", \
	"Touch the 'mtime' (last modification time)." )

#:def_cmd_opt( "TOUCH", "CTIME", \
	"", \
	"Touch the 'ctime' (last status change time)." )

#:def_cmd_opt( "TOUCH", "ATIME", \
	"", \
	"Touch the 'atime' (last access time)." )

#:def_cmd_opt( "TOUCH", "SET_TIME", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "TITLES", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "NO_UTF_8", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "LANG", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "AUTO", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "ALL", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "PART", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "FORCE", \
	"", \
	"If the automatic check finds problematic errors, then the report is" \
	" printed but the operation is *not* canceled." )

#:def_cmd_opt( "VERIFY", "NO_CHECK", \
	"", \
	"Disable automatic check of WBFS before modifications." )

#:def_cmd_opt( "VERIFY", "INCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "INCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "EXCLUDE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "EXCLUDE_PATH", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "QUIET", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "VERBOSE", \
	"", \
	"Show a runtime summary for each job. If set twice enable progress" \
	" information. If set three times the progress information is more" \
	" detailed." )

#:def_cmd_opt( "VERIFY", "PROGRESS", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "LIMIT", \
	"", \
	"Maximal printed errors of each partition. A zero means unlimitted." \
	" The default is 10." )

#:def_cmd_opt( "VERIFY", "TEST", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "PSEL", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "RAW", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "IGNORE_FILES", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "UNIQUE", \
	"", \
	"Eliminate multiple ID6 from the source list." )

#:def_cmd_opt( "VERIFY", "IGNORE", \
	"", \
	"Ignore non existing discs without any warning." )

#:def_cmd_opt( "VERIFY", "REMOVE", \
	"", \
	"Remove bad discs from WBFS." )

#:def_cmd_opt( "VERIFY", "NO_FREE", \
	"", \
	"" )

#:def_cmd_opt( "VERIFY", "LONG", \
	"", \
	"On error print an additional line to localize the exact position" \
	" where the error is found. If set twice a hexdump of the hash values" \
	" is printed too." )

#:def_cmd_opt( "FILETYPE", "IGNORE", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "IGNORE_FST", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "NO_HEADER", \
	"", \
	"" )

#:def_cmd_opt( "FILETYPE", "LONG", \
	"", \
	"If set then ID6 and split file count are printed too. If set twice" \
	" the region is printed too." )


##
###############################################################################
###############                   Tool 'wdf'                    ###############
###############################################################################

#:def_tool( "wdf", \
	"wdf [options]... [+command] [options]... files...", \
	"wdf is a support tool for WDF and CISO archives. It convert (pack and" \
	" unpack), compare and dump WDF, WIA (only dump) and CISO archives." \
	" The default command depends on the program file name (see command" \
	" descriptions). Usual names are @wdf@, @unwdf@, @wdf-cat@, @wdf-cmp@" \
	" and @wdf-dump@ (with or without minus signs)." )

#:def_cmd( "VERSION", "+VERSION|+V", \
	"wdf +VERSION [ignored]...", \
	"Print program name, version and the defaults and exit." )

#:def_cmd( "HELP", "+HELP|+H", \
	"wdf +HELP [+command] [ignored]...", \
	"Print help and exit. If the first non option is a valid command name," \
	" then a help for the given command is printed." )

#:def_cmd( "PACK", "+PACK|+P", \
	"wdf +PACK [option]... files...", \
	"Pack sources into WDF or CISO archives. This is the general default." )

#:def_cmd( "UNPACK", "+UNPACK|+U", \
	"wdf +UNPACK [option]... files...", \
	"Unpack WDF and CISO archives.\n" \
	"  This is the default command, when the program name starts with the" \
	" two letters @'un'@ in any case." )

#:def_cmd( "CAT", "+CAT|+C", \
	"wdf +CAT [option]... files...", \
	"Concatenate files and print on the standard output. WDF and CISO" \
	" files are extracted before printing, all other files are copied byte" \
	" by byte.\n" \
	"  This is the default command, when the program namecontains the" \
	" three letter @'cat'@ in any case." )

#:def_cmd( "DUMP", "+DUMP|+D", \
	"wdf +DUMP [option]... files...", \
	"Dump the data structure of WDF, WIA and CISO archives and ignore" \
	" other files.\n" \
	"  This is the default command, when the program contains the sub" \
	" string @'dump'@ in any case." )

#:def_opt( "VERSION", "V|version", "G", \
	"", \
	"Stop parsing the command line, print a version info and exit." )

#:def_opt( "HELP", "h|help", "G", \
	"", \
	"Stop parsing the command line, print a help message and exit." )

#:def_opt( "XHELP", "xhelp", "G", \
	"", \
	"Stop parsing the command line and print a help message with all" \
	" commands included. Exit after printing." )

#:def_opt( "WIDTH", "width", "GP", \
	"width", \
	"Define the width (number of columns) for help and some other" \
	" messages. This option disables the automatic detection of the" \
	" terminal width." )

#:def_opt( "QUIET", "q|quiet", "G", \
	"", \
	"Be quiet and print only error messages." )

#:def_opt( "VERBOSE", "v|verbose", "G", \
	"", \
	"Be verbose -> print program name." )

#:def_opt( "LOGGING", "L|logging", "GM", \
	"", \
	"Enable the logging of internal memory maps. If set twice second level" \
	" memory maps are printed too." )

#:def_opt( "CHUNK", "chunk", "C", \
	"", \
	"Print table with chunk header too." )

#:def_opt( "LONG", "l|long", "C", \
	"", \
	"Print (un)pack statistics, 1 line for each source. In dump mode:" \
	" Print table with chunk header too (same as {--chunk})." )

#:def_opt( "MINUS1", "1|minus-1|minus1", "C", \
	"", \
	"If set the end address is the last address of a range. The standard" \
	" is to print the first address that is not part of the address of a" \
	" range." )

#:def_opt( "WDF", "W|wdf", "C", \
	"", \
	"Force WDF output mode if packing and set the default suffix to" \
	" @'.wdf'@. This is the general default." )

#:def_opt( "WIA", "wia", "C", \
	"", \
	"Force WIA output mode if packing and set the default suffix to" \
	" @'.wia'@.\n" \
	"   This is the default, when the program name contains the sub string" \
	" @'wia'@ in any case." )

#:def_opt( "CISO", "C|ciso", "C", \
	"", \
	"Force CISO output mode if packing and set the default suffix to" \
	" @'.ciso'@.\n" \
	"   This is the default, when the program name contains the sub string" \
	" @'ciso'@ in any case." )

#:def_opt( "WBI", "wbi", "C", \
	"", \
	"Force CISO output mode if packing and set the default suffix to" \
	" @'.wbi'@.\n" \
	"   This is the default, when the program name contains the sub string" \
	" @'wbi'@ but not @'ciso'@ in any case." )

#:def_opt( "SUFFIX", "s|suffix", "CP", \
	".suf", \
	"Use suffix @'.suf'@ instead of @'.wdf'@, @'.wia'@, or @'.ciso'@ for" \
	" packed files." )

#:def_opt( "DEST", "d|dest", "CP", \
	"path", \
	"Define a destination path (directory/file)." )

#:def_opt( "DEST2", "D|DEST", "CP", \
	"path", \
	"Like {--dest}, but create the directory path automatically." )

#:def_opt( "STDOUT", "c|stdout", "C", \
	"", \
	"Write to standard output (stdout) and keep (don't delete) input" \
	" files.\n" \
	"  This is the default, when the program is reading from standard" \
	" input (stdin)." )

#:def_opt( "KEEP", "k|keep", "C", \
	"", \
	"Keep (don't delete) input files during (un-)packing." )

#:def_opt( "OVERWRITE", "o|overwrite", "C", \
	"", \
	"Overwrite already existing files." )

#:def_opt( "PRESERVE", "p|preserve", "C", \
	"", \
	"Preserve file times (atime+mtime)." )

#:def_opt( "SPLIT", "z|split", "C", \
	"", \
	"Enable output file splitting, default split size = 4 GB." )

#:def_opt( "SPLIT_SIZE", "Z|split-size|splitsize", "CP", \
	"sz", \
	"Enable output file splitting and define split size. The parameter" \
	" 'sz' is a floating point number followed by an optional unit factor" \
	" (one of 'cb' [=1] or  'kmgtpe' [base=1000] or 'KMGTPE' [base=1024])." \
	" The default unit is 'G' (GiB)." )

#:def_opt( "CHUNK_MODE", "chunk-mode|chunkmode|chm", "CP", \
	"mode", \
	"Defines an operation mode for {--chunk-size} and {--max-chunks}." \
	" Allowed keywords are @'ANY'@ to allow any values, @'32K'@ to force" \
	" chunk sizes with a multiple of 32 KiB, @'POW2'@ to force chunk sizes" \
	" >=32K and with a power of 2 or @'ISO'@ for ISO images (more" \
	" restrictive as @'POW2'@, best for USB loaders). The case of the" \
	" keyword is ignored. The default key is @'32K'@.\n" \
	"@--chm@ is a shortcut for @--chunk-mode@." )

#:def_opt( "CHUNK_SIZE", "chunk-size|chunksize|chs", "CP", \
	"sz", \
	"Define the minimal chunk size if creating a CISO or WIA file (for WIA" \
	" details see option --compression}). The default is to calculate the" \
	" chunk size from the input file size and find a good value by using a" \
	" minimal value of 1 MiB for {--chunk-mode ISO} and @32 KiB@ for modes" \
	" @32K@ and @POW2@. For the modes @ISO@ and @POW2@ the value is" \
	" rounded up to the next power of 2. This calculation also depends" \
	" from option {--max-chunks}.\n" \
	"  The parameter 'sz' is a floating point number followed by an" \
	" optional unit factor (one of 'cb' [=1] or  'kmgtpe' [base=1000] or" \
	" 'KMGTPE' [base=1024]). The default unit is 'M' (MiB). If the number" \
	" is prefixed with a @'='@ then options {--chunk-mode} and" \
	" {--max-chunks} are ignored and the given value is used without any" \
	" rounding or changing.\n" \
	"  If the input file size is not known (e.g. reading from pipe), its" \
	" size is assumed as @12 GiB@.\n" \
	"  @--chs@ is a shortcut for @--chunk-size@." )

#:def_opt( "MAX_CHUNKS", "max-chunks|maxchunks|mch", "CP", \
	"n", \
	"Define the maximal number of chunks if creating a CISO file. The" \
	" default value is 8192 for {--chunk-mode ISO} and 32760 (maximal" \
	" value) for all other modes. If this value is set than the automatic" \
	" calculation  of {--chunk-size} will be modified too.\n" \
	"  @--mch@ is a shortcut for @--max-chunks@." )

#:def_opt( "COMPRESSION", "compression|compr", "CP", \
	"mode", \
	"Select one compression method, level and chunk size for new WIA" \
	" files. The syntax for mode is: @[method] [.level] [@@factor]@\n" \
	"  @'method'@ is the name or index of the method. Possible" \
	" compressions method are @NONE@, @PURGE@, @BZIP2@, @LZMA@ and" \
	" @LZMA2@. There are additional keywords: @DEFAULT@ (=@LZMA.5@@20@)," \
	" @FAST@ (=@BZIP2.3@@10@), @GOOD@ (=@LZMA.5@@20@) @BEST@" \
	" (=@LZMA.7@@50@), and @MEM@ (use best mode in respect to memory limit" \
	" set by {--mem}). These additional keywords may change their meanings" \
	" if a new compression method is implemented.\n" \
	"  @'.level'@ is a point followed by one digit. It defines the" \
	" compression level. The special value @.0@ means: Use default" \
	" compression level (=@.5@).\n" \
	"  @'@@factor'@ is a factor for the chunk size. The base size is 2" \
	" MiB. The value@ @@0@ is replaced by the default factor@ @@20@ (40" \
	" MiB). If the factor is not set but option {--chunk-size} is set, the" \
	" factor will be calculated by using a rounded value of that option.\n" \
	"  All three parts are optional. All default values may be changed in" \
	" the future. @--compr@ is a shortcut for @--compression@." )

#:def_opt( "MEM", "mem", "CP", \
	"size", \
	"This option defines a memory usage limit for compressing files. When" \
	" compressing a file with method @MEM@ (see {--compression}) the the" \
	" compression method, level and chunk size are calculated with respect" \
	" to this limit.\n" \
	"  If this option is not set or the value is 0, then the environment" \
	" @WIT_MEM@ is tried to read instead. If this fails, the tool tries to" \
	" find out the total memory by reading @/proc/meminfo@. The limit is" \
	" set to 80% of the total memory minus 50 MiB." )

#:def_opt( "TEST", "t|test", "G", \
	"", \
	"Run in test mode, modify nothing.\n" \
	">>> USE THIS OPTION IF UNSURE! <<<" )

#:def_cmd_opt( "VERSION", "LONG", \
	"", \
	"Print in long format." )

#:def_cmd_opt( "PACK", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "COMPRESSION", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "STDOUT", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "KEEP", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "PRESERVE", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "WDF", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "WIA", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "CISO", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "WBI", \
	"", \
	"" )

#:def_cmd_opt( "PACK", "SUFFIX", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "COMPRESSION", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "STDOUT", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "KEEP", \
	"", \
	"" )

#:def_cmd_opt( "UNPACK", "PRESERVE", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "SPLIT", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "SPLIT_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "CHUNK_MODE", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "CHUNK_SIZE", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "MAX_CHUNKS", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "COMPRESSION", \
	"", \
	"" )

#:def_cmd_opt( "CAT", "MEM", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "DEST", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "DEST2", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "OVERWRITE", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "CHUNK", \
	"", \
	"" )

#:def_cmd_opt( "DUMP", "LONG", \
	"", \
	"Same as {--chunk}" )

#:def_cmd_opt( "DUMP", "MINUS1", \
	"", \
	"" )


##
###############################################################################
###############                 Tool 'wdf-cat'                  ###############
###############################################################################

#:def_tool( "wdf-cat", \
	"wdf-cat [option]... files...", \
	"Works like the 'cat' command: Dump all file contents to standard" \
	" output (stdout) and extract WDF and CISO files on the fly. All other" \
	" files are copied byte by byte." )

#:def_opt( "VERSION", "V|version", "G", \
	"", \
	"Stop parsing the command line, print a version info and exit." )

#:def_opt( "HELP", "h|help", "G", \
	"", \
	"Stop parsing the command line, print a help message and exit." )

#:def_opt( "XHELP", "xhelp", "G", \
	"", \
	"Same as {--help}." )

#:def_opt( "WIDTH", "width", "GP", \
	"width", \
	"Define the width (number of columns) for help and some other" \
	" messages. This option disables the automatic detection of the" \
	" terminal width." )

#:def_opt( "IO", "io", "GP", \
	"flags", \
	"Setup the IO mode for experiments. The standard file IO is based on" \
	" open() function. The value '1' defines that WBFS IO is based on" \
	" fopen() function. The value '2' defines the same for ISO files and" \
	" value '4' for WIA files. You can combine the values by adding them." )


##
###############################################################################
###############                 Tool 'wdf-dump'                 ###############
###############################################################################

#:def_tool( "wdf-dump", \
	"wdf-dump [option]... files...", \
	"Dump the data structure of WDF and CISO files for analysis." )

#:def_opt( "VERSION", "V|version", "G", \
	"", \
	"Stop parsing the command line, print a version info and exit." )

#:def_opt( "HELP", "h|help", "G", \
	"", \
	"Stop parsing the command line, print a help message and exit." )

#:def_opt( "XHELP", "xhelp", "G", \
	"", \
	"Same as {--help}." )

#:def_opt( "WIDTH", "width", "GP", \
	"width", \
	"Define the width (number of columns) for help and some other" \
	" messages. This option disables the automatic detection of the" \
	" terminal width." )

#:def_opt( "QUIET", "q|quiet", "G", \
	"", \
	"Be quiet and print only error messages." )

#:def_opt( "VERBOSE", "v|verbose", "G", \
	"", \
	"Be verbose -> print program name." )

#:def_opt( "IO", "io", "GP", \
	"flags", \
	"Setup the IO mode for experiments. The standard file IO is based on" \
	" open() function. The value '1' defines that WBFS IO is based on" \
	" fopen() function. The value '2' defines the same for ISO files and" \
	" value '4' for WIA files. You can combine the values by adding them." )

#:def_opt( "CHUNK", "c|chunk", "G", \
	"", \
	"Print table with chunk header." )

#:def_opt( "LONG", "l|long", "G", \
	"", \
	"Alternative for {--chunk}: Print table with chunk header." )


##
###############################################################################
###############                       END                       ###############
###############################################################################

